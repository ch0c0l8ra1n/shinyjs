% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/useShinyjs.R
\name{useShinyjs}
\alias{useShinyjs}
\title{Set up a Shiny app to use shinyjs}
\usage{
useShinyjs(...)
}
\arguments{
\item{...}{Used to catch deprecated arguments.}
}
\value{
Scripts that \code{shinyjs} requires that are automatically inserted
to the app's \code{<head>} tag.
}
\description{
This function must be called from a Shiny app's UI in order for all other
\code{shinyjs} functions to work.\cr\cr
You can call \code{useShinyjs()} from anywhere inside the UI, as long as the
final app UI contains the result of \code{useShinyjs()}.
}
\details{
If you're a package author and including \code{shinyjs} in a function in your
your package, you need to make sure \code{useShinyjs()} is called either by
the end user's Shiny app or by your function's UI.

To enable debug mode for shinyjs, set \code{options("shinyjs.debug" = TRUE)}.
}
\examples{
if (interactive()) {
  library(shiny)

  shinyApp(
    ui = fluidPage(
      useShinyjs(),  # Set up shinyjs
      actionButton("btn", "Click me"),
      textInput("element", "Watch what happens to me")
    ),
    server = function(input, output) {
      observeEvent(input$btn, {
        # Run a simply shinyjs function
        toggle("element")
      })
    }
  )
}
}
\seealso{
\code{\link[shinyjs]{runExample}}
\code{\link[shinyjs]{extendShinyjs}}
}
